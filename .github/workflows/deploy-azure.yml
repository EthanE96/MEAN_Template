name: Publish Docker Image to GHCR

on:
  push:
    paths:
      - "api/**"
    tags:
      - "v*"

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Image tag to deploy to staging"
        required: true
        default: "latest"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mean-api
  AZURE_CONTAINER_APP_NAME_STAGE: mean-api-stage
  AZURE_CONTAINER_APP_NAME_PROD: mean-api-prod
  AZURE_RESOURCE_GROUP: Mean_Template

jobs:
  # Build and push Docker image to GHCR
  build-and-push-docker-image:
    name: Build and Publish Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Downcase Image Name and Repository
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY@L}/${IMAGE_NAME}" >> "${GITHUB_ENV}"

      - name: Log in to the Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate metadata for Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ./api
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  # Deploy Stage to Azure Container Apps
  deploy-stage:
    name: Deploy Stage
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    permissions:
      id-token: write
      contents: read
    environment:
      name: Staging

    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.MEANAPISTAGE_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.MEANAPISTAGE_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.MEANAPISTAGE_AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container App (Stage)
        uses: azure/container-apps-deploy-action@v2
        with:
          containerAppName: ${{ env.AZURE_CONTAINER_APP_NAME_STAGE }}
          resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
          imageToDeploy: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.image_tag || 'latest' }}
          appSourcePath: "./api"

  # Deploy Production to Azure Container Apps
  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs:
      - build-and-push-docker-image
      - deploy-stage
    permissions:
      id-token: write
      contents: read
    environment:
      name: Production

    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.MEANAPISTAGE_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.MEANAPISTAGE_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.MEANAPISTAGE_AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container App (Production)
        uses: azure/container-apps-deploy-action@v2
        with:
          containerAppName: ${{ env.AZURE_CONTAINER_APP_NAME_PROD }}
          resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
          imageToDeploy: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.image_tag || 'latest' }}
          appSourcePath: "./api"
